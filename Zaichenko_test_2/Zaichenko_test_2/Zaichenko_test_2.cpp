#include <iostream>
#include <vector>
#include <iomanip>
#include <Windows.h>
using namespace std;

// Структура для визанчяння прямої
struct Line {
    double x1, y1;
    double x2, y2;
};

// Перевірка, чи є пряма точкою (x1 == x2 && y1 == y2)
bool isPoint(const Line& line) {
    return line.x1 == line.x2 && line.y1 == line.y2;
}

// Функція для обчислення коефіцієнтів прямої у вигляді y = ax + b
bool getLineEquation(const Line& line, double& a, double& b) {
    if (isPoint(line)) {
        return false;
    }
    double dx = line.x2 - line.x1;

    // Перевірка на вертикальну пряму (x1 == x2) — нахил не визначений і повертаємо false, якщо неможливо представити у вигляді y = ax + b
    if (dx == 0) {
        return false; 
    }

    // Обчислюємо коефіцієнти прямої
    a = (line.y2 - line.y1) / dx; // Нахил, або ж похідна
    b = line.y1 - a * line.x1; // Вільний член, або ж перетин з віссю Y

    return true;
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    int n;

    cout << "Скільки прямих ви хочете ввести? ";
    cin >> n;
    vector<Line> lines(n);

    // Введення даних користувачем
    for (int i = 0; i < n; ++i) {
        cout << "Введіть координати для прямої #" << (i + 1) << " (x1 y1 x2 y2): ";
        cin >> lines[i].x1 >> lines[i].y1 >> lines[i].x2 >> lines[i].y2;
    }

    cout << fixed << setprecision(2);

    // Обробка кожної прямої
    for (int i = 0; i < n; ++i) {
        double a, b;

        cout << "Пряма #" << (i + 1) << ": ";

        if (isPoint(lines[i])) {
            cout << "Це точка, а не пряма: (" << lines[i].x1 << ", " << lines[i].y1 << ")" << endl;
        }
        else if (getLineEquation(lines[i], a, b)) {
            cout << "y = " << a << "x + " << b << endl;
        }
        else {
            cout << "Пряма вертикальна: x = " << lines[i].x1 << endl;
        }
    }

    return 0;
}

//Test
// Test 1:
// Скільки прямих ви хочете ввести? 1
// Введіть координати для прямої #1 (x1 y1 x2 y2): 4 3 7 2
// Пряма #1: y = -0.33x + 4.33

// Test 2: Горизонтальна пряма (a = 0)
// Скільки прямих ви хочете ввести? 1
// Введіть координати для прямої #1 (x1 y1 x2 y2): 2 5 8 5
// Пряма #1: y = 0.00x + 5.00

// Test 3: Вертикальна пряма (x1 == x2)
// Скільки прямих ви хочете ввести? 1
// Введіть координати для прямої #1 (x1 y1 x2 y2): 3 1 3 7
// Пряма #1: Пряма вертикальна: x = 3.00

// Test 4: Точка (x1 == x2, y1 == y2)
// Скільки прямих ви хочете ввести? 1
// Введіть координати для прямої #1 (x1 y1 x2 y2): 5 5 5 5
// Пряма #1: Це точка, а не пряма: (5.00, 5.00)

// Test 5: Випадок з від’ємними координатами
// Скільки прямих ви хочете ввести? 1
// Введіть координати для прямої #1 (x1 y1 x2 y2): -2 -2 2 2
// Пряма #1: y = 1.00x + 0.00

// Test 6: 2 прямі, одна з них вертикальна
// Скільки прямих ви хочете ввести? 2
// Введіть координати для прямої #1 (x1 y1 x2 y2): 1 2 4 5
// Введіть координати для прямої #2 (x1 y1 x2 y2): 7 1 7 4
// Пряма #1: y = 1.00x + 1.00
// Пряма #2: Пряма вертикальна: x = 7.00

// Test 7: 3 прямі — звичайна, точка, горизонтальна
// Скільки прямих ви хочете ввести? 3
// Введіть координати для прямої #1 (x1 y1 x2 y2): 0 0 1 1
// Введіть координати для прямої #2 (x1 y1 x2 y2): 2 2 2 2
// Введіть координати для прямої #3 (x1 y1 x2 y2): 4 3 8 3
// Пряма #1: y = 1.00x + 0.00
// Пряма #2: Це точка, а не пряма: (2.00, 2.00)
// Пряма #3: y = 0.00x + 3.00

// Test 8: 3 прямих, з рандомом
// Скільки прямих ви хочете ввести? 3
// Введіть координати для прямої #1 (x1 y1 x2 y2): -1 -1 1 1
// Введіть координати для прямої #2 (x1 y1 x2 y2): 0 0 0 5
// Введіть координати для прямої #3 (x1 y1 x2 y2): 5 5 5 5
// Пряма #1: y = 1.00x + 0.00
// Пряма #2: Пряма вертикальна: x = 0.00
// Пряма #3: Це точка, а не пряма: (5.00, 5.00)